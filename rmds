#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Name:     rmds
# Author:   prince@princebot.com
# Source:   https://github.com/princebot/rmds
# Synopsis: Delete all .DS_Store and other autogenerated hidden files on macOS.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Globals.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

declare -r PROG="rmds"
declare -r USAGE="\
Usage: ${PROG} [--silent]
Delete .DS_Store and other autogenerated hidden files on macOS.

-h, --help
       Display this help and quit.
-s, --silent
       Disable Notification Center status messages.
"
declare -i OPT_SILENT=0


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Functions.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

main() {
    while (($# > 0)); do
        case $1 in
            -h|-help|--help)
                printf -- "${USAGE}"
                exit 0
                ;;
            -s|--silent)
                OPT_SILENT=1
                shift 1
                ;;
            *)
                die "unrecognized flag: $1"
                ;;
        esac
    done

    log "starting â€¦"
    move_screenshots || die "unable to move screenshots from desktop"
    delete_ds_store 2>/dev/null
    log "finished"
}


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Recursively delete all .DS_Store and .localized files anywhere.
#
# Note: A .DS_Store on the desktop sometimes refuses to delete until both the
# user- and the system-level Finder processes restart. 
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
delete_ds_store() {
    rm -f -- ~/Desktop/.DS_Store
    killall Finder
    sudo killall Finder
    sudo find / \( -name .DS_Store -or \( -name .localized -and -size 0k \) \) \
        | xargs -I{} sudo rm -f -- "{}"
}


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Print an error then quit with exit status 1.
#
# If OPT_SILENT is not set, this also sends a message via Notification Center.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
die() {
    echo "${PROG}: $@" >&2
    if ((! OPT_SILENT)); then
        osascript -e "display notification \"$@\"" \
                     "with title rmds "            \
                     "subtitle error "             \
                     "sound name Submarine"
    fi
    exit 1
}


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Print a message.
#
# If OPT_SILENT is not set, this also sends a message via Notification Center.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
log() {
    local timestamp=$(date +%Y-%m-%dT%H:%M:%S)
    echo "${timestamp}: ${PROG}: $@" >&2
    if ((! OPT_SILENT)); then
        osascript -e "display notification \"$@\" " \
                     "with title rmds "             \
                     "subtitle info "               \
                     "sound name Submarine"
    fi
}


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Move any screenshots in ~/Desktop to ~/Pictures/screenshots.
#
# Taking screenshots creates a persistent .DS_Store file on the desktop that
# cannot be easily deleted. Our hack: Move the screenshots and restart Finder.
#
# Note: This function runs in a subshell because it modifies $IFS.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
move_screenshots() (
    local dest="${HOME}/Pictures/screenshots"
    mkdir -p "${dest}" || exit 1

    # Screenshot filenames contain spaces by default, so tell Bash to only
    # perform word-splitting for newlines.
    IFS=$'\n'

    local images
    images=($(find ~/Desktop -maxdepth 1 -iname '*.png'))
    for i in "${images[@]}"; do
        mv "$i" "${dest}/$(basename "$i")" || exit 1
    done
)


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Run this script.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main "$@"